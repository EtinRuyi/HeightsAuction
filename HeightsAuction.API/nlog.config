<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="${CurrentDir}\Logs\internalLog.txt">

	<!-- Enable ASP.NET Core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore" />
	</extensions>

	<!-- Define targets -->
	<targets>
		<!-- File Target for Custom logs -->
		<target name="customLog" xsi:type="File" fileName="${CurrentDir}\Logs\HeightsAuction.API-custom-${shortdate}.log"
				maxArchiveFiles="7"
				archiveAboveSize="10485760"
				archiveFileName="${CurrentDir}\Logs\HeightsAuction.API-custom.{#}.log"
				archiveEvery="Day"
				archiveNumbering="Rolling" />

		<!-- File Target for EF Core logs -->
		<target name="efcoreLog" xsi:type="File" fileName="${CurrentDir}\Logs\AUCTIONLogs\HeightsAuction.API-EFcore-${shortdate}.log"
				maxArchiveFiles="7"
				archiveAboveSize="10485760"
				archiveFileName="${CurrentDir}\Logs\AUCTIONLogs\HeightsAuction.API-EFcore.{#}.log"
				archiveEvery="Day"
				archiveNumbering="Rolling" />

		<!-- File Target for dbUpdateException logs -->
		<target name="dbUpdateExcept" xsi:type="File" fileName="${CurrentDir}\Logs\AUCTIONLogs\HeightsAuction.API-dbUpdateExcept-${shortdate}.log"
				maxArchiveFiles="7"
				archiveAboveSize="10485760"
				archiveFileName="${CurrentDir}\Logs\AUCTIONLogs\HeightsAuction.API-dbUpdateExcept.{#}.log"
				archiveEvery="Day"
				archiveNumbering="Rolling" />

		<!-- File Target for EF Core DB Command logs -->
		<target name="efcoreDBCommand" xsi:type="File" fileName="${CurrentDir}\Logs\AUCTIONLogs\HeightsAuction.API-efcoreDBCommand-${shortdate}.log"
				maxArchiveFiles="7"
				archiveAboveSize="10485760"
				archiveFileName="${CurrentDir}\Logs\AUCTIONLogs\HeightsAuction.API-efcoreDBCommand.{#}.log"
				archiveEvery="Day"
				archiveNumbering="Rolling" />

		<!-- File Target for EF Core DB Query logs -->
		<target name="efcoreDBQuery" xsi:type="File" fileName="${CurrentDir}\Logs\AUCTIONLogs\HeightsAuction.API-efcoreDBQuery-${shortdate}.log"
				maxArchiveFiles="7"
				archiveAboveSize="10485760"
				archiveFileName="${CurrentDir}\Logs\AUCTIONLogs\HeightsAuction.API-efcoreDBQuery.{#}.log"
				archiveEvery="Day"
				archiveNumbering="Rolling" />

		<!-- Console Target for hosting lifetime messages -->
		<target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />
	</targets>

	<!-- Define rules to map from logger name to target -->
	<rules>
		<!-- Custom logs -->
		<logger name="HeightsAuction.API.*" minlevel="Debug" writeTo="customLog" />

		<!-- EF Core logs -->
		<logger name="Microsoft.EntityFrameworkCore" minlevel="Debug" writeTo="efcoreLog" />
		<logger name="Microsoft.EntityFrameworkCore.Database.Command" minlevel="Debug" writeTo="efcoreDBCommand" />
		<logger name="Microsoft.EntityFrameworkCore.Query" minlevel="Debug" writeTo="efcoreDBQuery" />

		<!-- dbUpdateException logs -->
		<logger name="Microsoft.EntityFrameworkCore.DbUpdateException" minlevel="Debug" writeTo="dbUpdateExcept" />

		<!-- All logs, including from Microsoft -->
		<logger name="*" minlevel="Trace" writeTo="lifetimeConsole" />

		<!-- Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole" />

		<!-- Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<logger name="System.Net.Http.*" maxlevel="Info" final="true" />
	</rules>
</nlog>
